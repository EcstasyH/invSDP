(set-logic LIA)

( declare-const e Int )
( declare-const e! Int )
( declare-const i Int )
( declare-const i! Int )
( declare-const n Int )
( declare-const n! Int )
( declare-const t Int )
( declare-const t! Int )
( declare-const u Int )
( declare-const u! Int )
( declare-const tmp Int )
( declare-const tmp! Int )

( declare-const e_0 Int )
( declare-const e_1 Int )
( declare-const e_2 Int )
( declare-const e_3 Int )
( declare-const e_4 Int )
( declare-const e_5 Int )
( declare-const e_6 Int )
( declare-const i_0 Int )
( declare-const i_1 Int )
( declare-const i_2 Int )
( declare-const i_3 Int )
( declare-const i_4 Int )
( declare-const i_5 Int )
( declare-const i_6 Int )
( declare-const n_0 Int )
( declare-const n_1 Int )
( declare-const n_2 Int )
( declare-const n_3 Int )
( declare-const n_4 Int )
( declare-const n_5 Int )
( declare-const n_6 Int )
( declare-const t_0 Int )
( declare-const u_0 Int )
( declare-const u_1 Int )
( declare-const u_2 Int )
( declare-const u_3 Int )
( declare-const u_4 Int )
( declare-const u_5 Int )
( declare-const u_6 Int )

( define-fun inv-f( ( e Int )( i Int )( n Int )( t Int )( u Int )( tmp Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( e Int )( i Int )( n Int )( t Int )( u Int )( tmp Int )( e_0 Int )( e_1 Int )( e_2 Int )( e_3 Int )( e_4 Int )( e_5 Int )( e_6 Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( i_6 Int )( n_0 Int )( n_1 Int )( n_2 Int )( n_3 Int )( n_4 Int )( n_5 Int )( n_6 Int )( t_0 Int )( u_0 Int )( u_1 Int )( u_2 Int )( u_3 Int )( u_4 Int )( u_5 Int )( u_6 Int ) ) Bool
	( and
		( = e e_0 )
		( = i i_0 )
		( = n n_0 )
		( = t t_0 )
		( = u u_0 )
		( = u_0 0 )
		( = e_0 0 )
		( = n_0 0 )
		( >= i_0 1 )
		( = t_0 i_0 )
	)
)

( define-fun trans-f ( ( e Int )( i Int )( n Int )( t Int )( u Int )( tmp Int )( e! Int )( i! Int )( n! Int )( t! Int )( u! Int )( tmp! Int )( e_0 Int )( e_1 Int )( e_2 Int )( e_3 Int )( e_4 Int )( e_5 Int )( e_6 Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( i_6 Int )( n_0 Int )( n_1 Int )( n_2 Int )( n_3 Int )( n_4 Int )( n_5 Int )( n_6 Int )( t_0 Int )( u_0 Int )( u_1 Int )( u_2 Int )( u_3 Int )( u_4 Int )( u_5 Int )( u_6 Int ) ) Bool
	( or
		( and
			( = e_1 e )
			( = i_1 i )
			( = n_1 n )
			( = u_1 u )
			( = e_1 e! )
			( = i_1 i! )
			( = n_1 n! )
			( = u_1 u! )
			( = e e! )
			( = i i! )
			( = n n! )
			( = t t! )
			( = u u! )
			(= tmp tmp! )
		)
		( and
			( = e_1 e )
			( = i_1 i )
			( = n_1 n )
			( = u_1 u )
			( >= i_1 1 )
			( = u_2 ( + u_1 1 ) )
			( = e_2 0 )
			( = n_2 ( + n_1 e_2 ) )
			( = i_2 ( - i_1 1 ) )
			( = e_3 e_2 )
			( = i_3 i_2 )
			( = n_3 n_2 )
			( = u_3 u_2 )
			( = e_3 e! )
			( = i_3 i! )
			( = n_3 n! )
			( = u_3 u! )
			(= t t_0 )
			(= t! t_0 )
			(= tmp tmp! )
		)
		( and
			( = e_1 e )
			( = i_1 i )
			( = n_1 n )
			( = u_1 u )
			( not ( >= i_1 1 ) )
			( >= i_1 1 )
			( = u_4 0 )
			( = e_4 1 )
			( = n_4 0 )
			( = i_4 ( - ( + ( + ( + i_1 e_4 ) n_4 ) u_4 ) 1 ) )
			( = e_3 e_4 )
			( = i_3 i_4 )
			( = n_3 n_4 )
			( = u_3 u_4 )
			( = e_3 e! )
			( = i_3 i! )
			( = n_3 n! )
			( = u_3 u! )
			(= t t_0 )
			(= t! t_0 )
			(= tmp tmp! )
		)
		( and
			( = e_1 e )
			( = i_1 i )
			( = n_1 n )
			( = u_1 u )
			( not ( >= i_1 1 ) )
			( not ( >= i_1 1 ) )
			( >= n_1 1 )
			( = u_5 0 )
			( = e_5 ( + e_1 1 ) )
			( = n_5 0 )
			( = i_5 ( - ( + ( + i_1 n_5 ) u_5 ) 1 ) )
			( = e_3 e_5 )
			( = i_3 i_5 )
			( = n_3 n_5 )
			( = u_3 u_5 )
			( = e_3 e! )
			( = i_3 i! )
			( = n_3 n! )
			( = u_3 u! )
			(= t t_0 )
			(= t! t_0 )
			(= tmp tmp! )
		)
		( and
			( = e_1 e )
			( = i_1 i )
			( = n_1 n )
			( = u_1 u )
			( not ( >= i_1 1 ) )
			( not ( >= i_1 1 ) )
			( not ( >= n_1 1 ) )
			( = u_6 0 )
			( = e_6 ( + e_1 1 ) )
			( = n_6 0 )
			( = i_6 ( - ( + ( + i_1 n_6 ) u_6 ) 1 ) )
			( = e_3 e_6 )
			( = i_3 i_6 )
			( = n_3 n_6 )
			( = u_3 u_6 )
			( = e_3 e! )
			( = i_3 i! )
			( = n_3 n! )
			( = u_3 u! )
			(= t t_0 )
			(= t! t_0 )
			(= tmp tmp! )
		)
	)
)

( define-fun post-f ( ( e Int )( i Int )( n Int )( t Int )( u Int )( tmp Int )( e_0 Int )( e_1 Int )( e_2 Int )( e_3 Int )( e_4 Int )( e_5 Int )( e_6 Int )( i_0 Int )( i_1 Int )( i_2 Int )( i_3 Int )( i_4 Int )( i_5 Int )( i_6 Int )( n_0 Int )( n_1 Int )( n_2 Int )( n_3 Int )( n_4 Int )( n_5 Int )( n_6 Int )( t_0 Int )( u_0 Int )( u_1 Int )( u_2 Int )( u_3 Int )( u_4 Int )( u_5 Int )( u_6 Int ) ) Bool
	( or
		( not
			( and
				( = e e_1)
				( = i i_1)
				( = n n_1)
				( = t t_0)
				( = u u_1)
			)
		)
		( not
			( and
				( not ( = t_0 ( + ( + ( + u_1 e_1 ) n_1 ) i_1 ) ) )
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f e i n t u tmp e_0 e_1 e_2 e_3 e_4 e_5 e_6 i_0 i_1 i_2 i_3 i_4 i_5 i_6 n_0 n_1 n_2 n_3 n_4 n_5 n_6 t_0 u_0 u_1 u_2 u_3 u_4 u_5 u_6  )
		( inv-f e i n t u tmp )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f e i n t u tmp )
			( trans-f e i n t u tmp e! i! n! t! u! tmp! e_0 e_1 e_2 e_3 e_4 e_5 e_6 i_0 i_1 i_2 i_3 i_4 i_5 i_6 n_0 n_1 n_2 n_3 n_4 n_5 n_6 t_0 u_0 u_1 u_2 u_3 u_4 u_5 u_6 )
		)
		( inv-f e! i! n! t! u! tmp! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f e i n t u tmp  )
		( post-f e i n t u tmp e_0 e_1 e_2 e_3 e_4 e_5 e_6 i_0 i_1 i_2 i_3 i_4 i_5 i_6 n_0 n_1 n_2 n_3 n_4 n_5 n_6 t_0 u_0 u_1 u_2 u_3 u_4 u_5 u_6 )
	)
))

