(set-logic LIA)

( declare-const a Int )
( declare-const a! Int )
( declare-const b Int )
( declare-const b! Int )
( declare-const p Int )
( declare-const p! Int )
( declare-const q Int )
( declare-const q! Int )
( declare-const r Int )
( declare-const r! Int )
( declare-const s Int )
( declare-const s! Int )
( declare-const x Int )
( declare-const x! Int )
( declare-const y Int )
( declare-const y! Int )
( declare-const tmp Int )
( declare-const tmp! Int )

( declare-const a_0 Int )
( declare-const a_1 Int )
( declare-const a_2 Int )
( declare-const a_3 Int )
( declare-const b_0 Int )
( declare-const b_1 Int )
( declare-const b_2 Int )
( declare-const b_3 Int )
( declare-const p_0 Int )
( declare-const p_1 Int )
( declare-const p_2 Int )
( declare-const p_3 Int )
( declare-const q_0 Int )
( declare-const q_1 Int )
( declare-const q_2 Int )
( declare-const q_3 Int )
( declare-const r_0 Int )
( declare-const r_1 Int )
( declare-const r_2 Int )
( declare-const r_3 Int )
( declare-const s_0 Int )
( declare-const s_1 Int )
( declare-const s_2 Int )
( declare-const s_3 Int )
( declare-const x_0 Int )
( declare-const y_0 Int )

( define-fun inv-f( ( a Int )( b Int )( p Int )( q Int )( r Int )( s Int )( x Int )( y Int )( tmp Int ) ) Bool
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
)

( define-fun pre-f ( ( a Int )( b Int )( p Int )( q Int )( r Int )( s Int )( x Int )( y Int )( tmp Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( s_0 Int )( s_1 Int )( s_2 Int )( s_3 Int )( x_0 Int )( y_0 Int ) ) Bool
	( and
		( = a a_0 )
		( = b b_0 )
		( = p p_0 )
		( = q q_0 )
		( = r r_0 )
		( = s s_0 )
		( = x x_0 )
		( = y y_0 )
		( >= x_0 1 )
		( >= y_0 1 )
		( = a_0 x_0 )
		( = b_0 y_0 )
		( = p_0 1 )
		( = q_0 0 )
		( = r_0 0 )
		( = s_0 1 )
	)
)

( define-fun trans-f ( ( a Int )( b Int )( p Int )( q Int )( r Int )( s Int )( x Int )( y Int )( tmp Int )( a! Int )( b! Int )( p! Int )( q! Int )( r! Int )( s! Int )( x! Int )( y! Int )( tmp! Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( s_0 Int )( s_1 Int )( s_2 Int )( s_3 Int )( x_0 Int )( y_0 Int ) ) Bool
	( or
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( = r_1 r )
			( = s_1 s )
			( = a_1 a! )
			( = b_1 b! )
			( = p_1 p! )
			( = q_1 q! )
			( = r_1 r! )
			( = s_1 s! )
			( = a a! )
			( = b b! )
			( = p p! )
			( = q q! )
			( = r r! )
			( = s s! )
			( = x x! )
			( = y y! )
			(= tmp tmp! )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( = r_1 r )
			( = s_1 s )
			( >= a_1 b_1 )
			( = a_2 ( - a_1 b_1 ) )
			( = p_2 ( - p_1 q_1 ) )
			( = r_2 ( - r_1 s_1 ) )
			( = a_3 a_2 )
			( = b_2 b_1 )
			( = p_3 p_2 )
			( = q_2 q_1 )
			( = r_3 r_2 )
			( = s_2 s_1 )
			( = a_3 a! )
			( = b_2 b! )
			( = p_3 p! )
			( = q_2 q! )
			( = r_3 r! )
			( = s_2 s! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
			(= tmp tmp! )
		)
		( and
			( = a_1 a )
			( = b_1 b )
			( = p_1 p )
			( = q_1 q )
			( = r_1 r )
			( = s_1 s )
			( not ( >= a_1 b_1 ) )
			( = b_3 ( - b_1 a_1 ) )
			( = q_3 ( - q_1 p_1 ) )
			( = s_3 ( - s_1 r_1 ) )
			( = a_3 a_1 )
			( = b_2 b_3 )
			( = p_3 p_1 )
			( = q_2 q_3 )
			( = r_3 r_1 )
			( = s_2 s_3 )
			( = a_3 a! )
			( = b_2 b! )
			( = p_3 p! )
			( = q_2 q! )
			( = r_3 r! )
			( = s_2 s! )
			(= x x_0 )
			(= x! x_0 )
			(= y y_0 )
			(= y! y_0 )
			(= tmp tmp! )
		)
	)
)

( define-fun post-f ( ( a Int )( b Int )( p Int )( q Int )( r Int )( s Int )( x Int )( y Int )( tmp Int )( a_0 Int )( a_1 Int )( a_2 Int )( a_3 Int )( b_0 Int )( b_1 Int )( b_2 Int )( b_3 Int )( p_0 Int )( p_1 Int )( p_2 Int )( p_3 Int )( q_0 Int )( q_1 Int )( q_2 Int )( q_3 Int )( r_0 Int )( r_1 Int )( r_2 Int )( r_3 Int )( s_0 Int )( s_1 Int )( s_2 Int )( s_3 Int )( x_0 Int )( y_0 Int ) ) Bool
	( or
		( not
			( and
				( = a a_1)
				( = b b_1)
				( = p p_1)
				( = q q_1)
				( = r r_1)
				( = s s_1)
				( = x x_0)
				( = y y_0)
			)
		)
		( not
			( and
				( not ( = a_1 ( + ( * y_0 r_1 ) ( * x_0 p_1 ) ) ) )
			)
		)
	)
)
SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( pre-f a b p q r s x y tmp a_0 a_1 a_2 a_3 b_0 b_1 b_2 b_3 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 r_0 r_1 r_2 r_3 s_0 s_1 s_2 s_3 x_0 y_0  )
		( inv-f a b p q r s x y tmp )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( and
			( inv-f a b p q r s x y tmp )
			( trans-f a b p q r s x y tmp a! b! p! q! r! s! x! y! tmp! a_0 a_1 a_2 a_3 b_0 b_1 b_2 b_3 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 r_0 r_1 r_2 r_3 s_0 s_1 s_2 s_3 x_0 y_0 )
		)
		( inv-f a! b! p! q! r! s! x! y! tmp! )
	)
))

SPLIT_HERE_asdfghjklzxcvbnmqwertyuiop
( assert ( not
	( =>
		( inv-f a b p q r s x y tmp  )
		( post-f a b p q r s x y tmp a_0 a_1 a_2 a_3 b_0 b_1 b_2 b_3 p_0 p_1 p_2 p_3 q_0 q_1 q_2 q_3 r_0 r_1 r_2 r_3 s_0 s_1 s_2 s_3 x_0 y_0 )
	)
))

